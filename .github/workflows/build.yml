name: Release

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  release:
    name: Create release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

  artifacts:
    name: Build Artifacts
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [ubuntu-latest, windows-latest, macos-11]
        include:
          - os: ubuntu-latest
            os_name: ubuntu
            artifact_suffix: ""
          - os: windows-latest
            os_name: windows
            artifact_suffix: ".exe"
          - os: macos-11
            os_name: macos
            artifact_suffix: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22
      - name: golang build
        env:
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags="-s -w" -o outline_pdf_converter${{ matrix.artifact_suffix }} cmd/server/main.go
      - name: Upload binaries to release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/outline_pdf_converter${{ matrix.artifact_suffix }}
          asset_name: outline_pdf_converter${{ matrix.os_name }}_${{ matrix.arch }}${{ matrix.artifact_suffix }}
          tag: ${{ github.ref }}

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      DOCKER_IMAGE_URL: ghcr.io/mxcd/outline-pdf-converter
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build
        run: docker build --platform=linux/amd64 -t ${DOCKER_IMAGE_URL}:latest -t $DOCKER_IMAGE_URL:${GITHUB_SHA::8} -t $DOCKER_IMAGE_URL:${{ github.ref_name }} .

      - name: Push
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push $DOCKER_IMAGE_URL:latest
          docker push $DOCKER_IMAGE_URL:${GITHUB_SHA::8}
          docker push $DOCKER_IMAGE_URL:${{ github.ref_name }}
